cat(tracemem(x)"\n")
cat(tracemem(x), "\n")
for (i in seq_along(medians)) {
x[[i]] <- x[[i]]-medians[[i]]
}
untracemem()
untracemem(x)
gc()
gc()
a <- 12
typeof(a)
b <- 12L
typeof(b)
c <- integer(8)
c
install.packages("lobstr")
library(lobstr)
obj_size(a)
obj_size(b)
> if(1>2) {
+    cat("One is the most biggest number\n")  # Say something wrong
+ } else {
+    cat("One is the loneliest number\n")     # Say something less wrong
+ }
One is the loneliest number
> if(1>2) {
+    cat("One is the most biggest number\n")  # Say something wrong
+ } else {
+    cat("One is the loneliest number\n")     # Say something less wrong
+ }
> if(1>2) {
cat("One is the most biggest number\n")  # Say something wrong
} else {
cat("One is the loneliest number\n")     # Say something less wrong
}
if(1>2) {
cat("One is the most biggest number\n")  # Say something wrong
} else {
cat("One is the loneliest number\n")     # Say something less wrong
}
if(1>2) {
cat("One is the most biggest number\n")  # Say something wrong
} else {
print("One is the loneliest number")     # Say something less wrong
}
x <- factor(c("a","b","a","b"))
x
typeof(x)
class(x)
attributes(x)
y <- factor(c("first","third","second"))
y
y <- factor(c("first","third","zecond"))
y
y <- factor(c("first","third","zecond"), levels = c("first","second", "third"))
y
y <- factor(c("first","third","second"), levels = c("first","second", "third"))
y
genre <- c("male", "female")
typeof(genre)
genre2 <- factor(c("male", "female"))
typeof(genre2)
class(genre2)
genre2 <- factor(c("male", "male", "male"), levels = c("male", "female"))
table(genre2)
genre <- c("male", "male", "male")
table(genre)
today <- Sys.Date()
today
typeof(today)
class(today)
attributes(today)
unclass(today)
now <- as.POSIXct(today)
now
attributes(now)
diff_ex <- as.difftime(3, units = "days")
diff_ex
today+diff_ex
today+3
attributes(diff_ex)
library(parallel)
detectCores()
P <- detectCores(logical = FALSE) # physical cores
P
cl <- makeCluster(P)
cl
typeof(cl)
length(cl)
cl[[1]]
cl[[P]]
typeof(cl[[P]])
names(cl[[P]])
stopCluster(cl)
cl[[1]]
cl <- makeCluster(P)
clusterApply(cl, 1:P, fun = rnorm)
clusterApply(cl, 1:P, fun = rnorm,
mean = 10, sd = 2)
res <- clusterApply(cl, rep(100000, 20),
fun = function(x) mean(rnorm(x, mean = 5)))
length(res)
head(res)
mean(unlist(res))
stopCluster(cl)
cl <- makeCluster(P)
knitr::opts_chunk$set(echo = TRUE)
2 + 2
5 - 3
3 * 2
6 / 3
(5 + 3) / 4
3^2
log(100, base = 10)
5 %% 3
sqrt(9)
x <- 4
x
Numero_de_empleados <- 150
Numero_de_empleados
Nuevos_analistas_enero <- 5
Nuevos_analistas_febrero <- 3
Analistas <- Nuevos_analistas_enero + Nuevos_analistas_febrero
Analistas
Numero <-  1.0   # (real, flotante)
Entero <- 1
Caracter <- "ab"
Logico <- TRUE
Numero
Entero
Caracter
Logico
#Numero + Caracter
Suma <- Numero + Entero
Suma
class(Suma)
typeof(Suma)
is.numeric(Numero)
is.integer(Entero)
is.character(Caracter)
is.logical(Logico)
Entero_2 <- 1L
Entero_2
is.integer(Entero_2)
class(Entero_2)
typeof(Entero_2)
vector_numerico <- c(1, 10, 49)
vector_caracter <- c("a", "b", "c")
vector_numerico
vector_caracter
vector_mixto <- c(1,2,"a")
vector_mixto
vector_mixto2 <- c(1,2,TRUE)
vector_mixto2
vector_numerico
as.character(vector_numerico)
vector_logico <- c(TRUE, FALSE)
vector_logico
as.numeric(vector_logico)
vector_1 <- 1:5
vector_2 <- seq(1,5)
vector_1
vector_2
vector_3 <- seq(1,10, by = 2)
vector_4 <- seq(1,10, length.out = 20)
vector_5 <- seq(1,10, along.with = vector_1)
vector_3
vector_4
vector_5
names(vector_1)
nombres <- c("uno", "dos", "tres", "cuatro", "cinco")
names(vector_1) <- nombres
names(vector_1)
repetido <- rep(4,10)
repetido
repetido_2 <- rep(1:4, 4)
repetido_2
repetido_3 <- rep(1:4, each = 4)
repetido_3
A <- matrix(c(1, 2, 3, 4), nrow=2, ncol=2)
A
vector_1
vector_2
Vec_suma <- vector_1 +vector_2
Vec_suma
vector_1
vector_2
Vec_producto <- vector_1 * vector_2
Vec_producto
vector_4
length(vector_4)
summary(vector_4)
head(vector_4)
tail(vector_4)
table(vector_4)
vector_1
vector_cuadrado <- vector_1^2
vector_cuadrado
vector_cuadrado[1]
vector_cuadrado[3]
vector_cuadrado[1:3]
vector_cuadrado[3:1]
vector_cuadrado[c(1,3)]
vector_cuadrado[c(3,1)]
vector_cuadrado[-c(1,3)]
vector_cuadrado[-length(vector_cuadrado)]
vector_5
vector_5[vector_5 < 5]
vector_5[vector_5 > 5]
vector_5[vector_5 == 5.5]
vector_5
vector_5[vector_5 < 5] <- 0
vector_5
vector_cuadrado["dos"]
vector_cuadrado[c("uno", "tres")]
vector_5
max(vector_5)
min(vector_5)
sum(vector_5)
prod(vector_5)
vector_5 <- seq(1,10, along.with = vector_1)
vector_5
max(vector_5)
min(vector_5)
sum(vector_5)
prod(vector_5)
install.packages("CASdatasets")
install.packages("CASdatasets", repos = "http://dutangc.free.fr/pub/RRepos/", type="source")
library(CASdatasets)
data(ukaggclaim)
head(ukaggclaim)
??ukaggclaim
summary(ukaggclaim)
str(ukaggclaim)
library(psych)
psych::describe(ukaggclaim)
library(skimr)
ukaggclaim %>% skim
colnames(ukaggclaim)
head(ukaggclaim)
tail(ukaggclaim)
library(CASdatasets)
data(ukaggclaim)
View(ukaggclaim)
head(ukaggclaim)
tail(ukaggclaim)
head(ukaggclaim, n = 3)
tail(ukaggclaim, n = 2)
str(ukaggclaim)
summary(ukaggclaim)
colnames(ukaggclaim)
library(psych)
describe(ukaggclaim)
library(skimr)
skim(ukaggclaim)
dim(ukaggclaim)
ncol(ukaggclaim)
nrow(ukaggclaim)
ukaggclaim[1,1]
head(ukaggclaim, n = 1)
ukaggclaim[1,1]
head(ukaggclaim, n = 1)
ukaggclaim[1,1]
ukaggclaim[1,3]
head(ukaggclaim, n = 1)
ukaggclaim[1,1]
ukaggclaim[1,4]
head(ukaggclaim, n = 1)
ukaggclaim[1,2]
ukaggclaim[1,4]
ukaggclaim[2, ]
ukaggclaim[ , 4]
ukaggclaim[2, ]
ukaggclaim[ , 4]
ukaggclaim[ , "Nclaims"]
ukaggclaim[ , "NClaims"]
ukaggclaim$NClaims
ukaggclaim[1:3, 4:5]
uk_peque <-  ukaggclaim[1:3, 4:5]
uk_peque
ukaggclaim[1:10, ]
ukaggclaim[, 4:5]
ukaggclaim[, 4:5]
str(ukaggclaim)
summary(ukaggclaim$AvCost)
ukaggclaim[, ukaggclaim$AvCost > 160]
ukaggclaim[, "AvCost" > 160]
ukaggclaim[, "AvCost" > 200]
ukaggclaim[, "AvCost" > 250]
ukaggclaim[, "AvCost" > 300]
ukaggclaim["AvCost" > 300, ]
ukaggclaim[ukaggclaim$AvCost > 300, ]
ukaggclaim["AvCost" > 300, ]
ukaggclaim[ukaggclaim$Model == "A", ]
ukaggclaim[ukaggclaim$Model == "A" & ukaggclaim$NClaims > 100, ]
ukaggclaim[ukaggclaim$Model == "A" & ukaggclaim$NClaims >= 100, ]
summary(ukaggclaim$AvCost)
table(ukaggclaim$AvCost)
table(ukaggclaim$OwnerAge)
table(ukaggclaim$Model)
table(ukaggclaim$CarAge)
table(ukaggclaim$OwnerAge)
table(ukaggclaim$OwnerAge)
prop.table(ukaggclaim$NClaims)
table(ukaggclaim$NClaims)
prop.table(table(ukaggclaim$NClaims))
sqrt(5^2+3^2)
sqrt(5^2+4^2)
unlink('R/Mapfre/Mapfre/Mapfre_cache', recursive = TRUE)
repetido_3 <- rep(1:4, each = 4)
repetido_3
runif(25)
runif(25)*100
ceiling(runif(25)*100)
seed(123)
vector_5 <- ceiling(runif(25)*100)
set.seed(123)
vector_5 <- ceiling(runif(25)*100)
vector_5
vector_5[5]
vector_5[5:10]
max(vector_5)
min(vector_5)
vector_5[c(8,10,2)]
vector_5[vector_5> 50]
vector_5[vector_5 < 30]
set.seed(123)
vector_5 <- ceiling(runif(25)*100)
vector_5
set.seed(123)
vector_5 <- ceiling(runif(25)*100)
vector_5
set.seed(123)
vector_5 <- ceiling(runif(25)*100)
vector_5
paste(vector_5, sep = ",")
paste(vector_5, collapse = "")
paste(vector_5, collapse = ",")
vectooo <- c(59, 17, 16, 92, 43, 84, 51,  9, 27, 18, 91, 11, 55, 56, 97, 56, 44, 41, 44, 85, 72,  8, 67, 19, 38)
vectooo
vectooo <- c(29,  79,  41,  89,  95,   5,  53,  90,  56,  46,  96,  46,  68,  58,  11,  90,  25,   5,  33,  96,  89,  70,  65, 100,  66)
unlink('R/Mapfre/Mapfre/Mapfre_cache', recursive = TRUE)
unlink('R/Mapfre/Mapfre/Mapfre_cache', recursive = TRUE)
vectooo[length(vectooo-5):length(vectooo)]
vectooo[length(vectooo)-5:length(vectooo)]
length(vectooo)
length(vectooo[length(vectooo)-5:length(vectooo)])
vectooo <- c(29,  79,  41,  89,  95,   5,  53,  90,  56,  46,  96,  46,  68,  58,  11,  90,  25,   5,  33,  96,  89,  70,  65, 100,  66)
vectooo[length(vectooo)-5:length(vectooo)]
vectooo[-length(vectooo)-5:length(vectooo)]
head(mtcars)
library("AER", lib.loc="~/R/win-library/3.5")
library("devtools", lib.loc="~/R/win-library/3.5")
install_github(repo = "ScPoEcon/ScPoEconometrics")
ls()
dim(df)
head(df)
dim(df)
chicuadrado <- vector()
ls()
rm(chicuadrado)
chicadrado1 <- rnorm(n = 1000000,mean = 0, sd = 1)
chicadrado2 <- chicadrado1^2
chicadrado3 <- sum(chicadrado2)
chicadrado3
library(tidyverse)
library("tidyverse", lib.loc="~/R/win-library/3.5")
install.packages("rlang")
library("tidyverse", lib.loc="~/R/win-library/3.5")
install.packages("tibble")
library("tidyverse", lib.loc="~/R/win-library/3.5")
install.packages(tidyverse)
install.packages("tidyverse")
library("tidyverse", lib.loc="~/R/win-library/3.5")
library("tidyverse", lib.loc="~/R/win-library/3.5")
chicuadrado <- vector()
for (i in 1:1000000) {
chicuadrado[i] <- (rnorm(n = 1000000))^2 %>% sum()
}
hist(chicuadrado)
(rnorm(n = 20))^2 %>% sum()
s <- rnorm(n = 20)
sum(s^2)
chicua <- vector()
for (i in 1:1000) {
chicua[i] <- sum(rnorm(10)^2)
}
hist(chicua)
data.frame(chicua)
data.frame(chicua) %>% head
ggplot(data = data.frame(chicua), x=chicua)+geom_histogram()
ggplot(data = data.frame(chicua), aes(x=chicua))+geom_histogram()
ggplot(data = data.frame(chicua), aes(x=chicua, y=...density...))+geom_histogram()
ggplot(data = data.frame(chicua), aes(x=chicua, y=..density..))+geom_histogram()
ggplot(data = data.frame(chicua), aes(x=chicua, y=..density..))+geom_histogram()+geom_density()
ggplot(data = data.frame(chicua), aes(x=chicua, y=..density..))+geom_histogram(fill="cornsilk", colour="grey60", size=.2)+geom_density()
knitr::opts_chunk$set(echo = FALSE)
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
#Cargamos los datos
list.files(path = "/cloud/project/data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
list.files(path = "/cloud/project/data/", full.names = TRUE)
list.files(path = "~/project/data/", full.names = TRUE)
list.files(path = "~/data/", full.names = TRUE)
setwd("G:/CEU/FI/Taller/codes/InternationalFinance/Codes/")
list.files(path = "~/data/", full.names = TRUE)
getwd()
setwd("G:/CEU/FI/Taller/codes/InternationalFinance/")
list.files(path = "~/data/", full.names = TRUE)
setwd("G:/CEU/FI/Taller/codes/InternationalFinance/")
getwd()
list.files(path = "~/data/", full.names = TRUE)
list.files(path = "/data/", full.names = TRUE)
list.files(path = "Data/", full.names = TRUE)
knitr::opts_chunk$set(echo = FALSE)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
list.files(path = "Data/", full.names = TRUE)
getwd()
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
knitr::opts_chunk$set(echo = FALSE)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
plot(index(euro_libra),as.numeric(euro_libra[,6]),typ='l',xlab='',ylab='EUR/GBP', main = "Tipo de Cambio Euro/Libra")
knitr::opts_chunk$set(echo = FALSE)
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
source('G:/CEU/FI/Taller/codes/InternationalFinance/Codes/TipoDeCambio.R', echo=TRUE)
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
plot(index(euro_libra),as.numeric(euro_libra[,6]),typ='l',xlab='',ylab='EUR/GBP', main = "Tipo de Cambio Euro/Libra")
plot(index(euro_yen),as.numeric(euro_yen[,6]),typ='l',xlab='',ylab='EUR/JPY', main = "Tipo de Cambio Euro/Yen")
plot(index(euro_dolar),as.numeric(euro_dolar[,7]),typ='l',xlab='',ylab='EUR/USD', main = "Variación del Tipo de Cambio Euro/Dólar")
find_rstudio_root_file()
rprojroot::find_rstudio_root_file()
3*12
36*3
2019-1991
install.packages("rprojroot")
rprojroot::find_rstudio_root_file()
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = "G:/CEU/FI/Taller/codes/InternationalFinance/" )
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
if (! ('pacman' %in% installed.packages())) install.packages('pacman')
pacman::p_load(tidyverse, kableExtra, quantmod, BIS, fredr, patchwork)
#Cargamos los datos
list.files(path = "Data/", full.names = TRUE) %>%
map(load,.GlobalEnv)
plot(index(euro_dolar),as.numeric(euro_dolar[,6]),typ='l',xlab='',ylab='EUR/USD', main = "Tipo de Cambio Euro/Dólar")
hist(euro_dolar)
euro_dolar %>% head
hist(euro_dolar$adjusteddiff)
hist(euro_dolar$EURUSD.X.Adjusted)
hist(euro_yen$adjusteddiff)
hist(euro_libra$adjusteddiff)
hist(euro_dolar$adjusteddiff)
plot(index(euro_yen),as.numeric(euro_yen[,6]),typ='l',xlab='',ylab='EUR/JPY', main = "Tipo de Cambio Euro/Yen")
hist(euro_libra$adjusteddiff)
hist(euro_yen$adjusteddiff)
eps = rnorm(120, sd = 0.1)
eps
y = eps[1]
y
for (i in 2:120) {y[i] = 0.5 * y[i - 1] + eps[i]}
y = round(y, 3)
plot(y, type = "l")
for (i in 2:120) {y[i] = 0.9 * y[i - 1] + eps[i]}
y = round(y, 3)
plot(y, type = "l")
for (i in 2:120) {y[i] = 1 * y[i - 1] + eps[i]}
y = round(y, 3)
plot(y, type = "l")
for (i in 2:120) {y[i] = 0.8 * y[i - 1] + eps[i]}
y = round(y, 3)
plot(y, type = "l")
for (i in 2:120) {y[i] = 0.95 * y[i - 1] + eps[i]}
y = round(y, 3)
plot(y, type = "l")
